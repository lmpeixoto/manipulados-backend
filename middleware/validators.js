const { check, validationResult } = require('express-validator');

exports.validateManipulado = [
    check('lote')
        .trim()
        .escape()
        .isAlphanumeric()
        .not()
        .isEmpty()
        .withMessage('Lote do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Lote do manipulado tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('nomeManipulado')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Nome do manipulado tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('fatorF')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Fator tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Fator F não pode ser nulo!')
        .bail(),
    check('utenteNome')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do utente não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Nome do utente tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('utenteContacto')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Contacto do utente tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Contacto do utente não pode ser nulo!')
        .bail()
        .isLength({ min: 9 })
        .withMessage('Contacto do utente tem de ter no mínimo 9 números!')
        .bail(),
    check('prescritorNome')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do prescritor não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Nome do prescritor tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('prescritorContacto')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Contacto do prescritor tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Contacto do prescritor não pode ser nulo!')
        .bail()
        .isLength({ min: 9 })
        .withMessage('Contacto do prescritor tem de ter no mínimo 9 números!')
        .bail(),
    check('farmaceutico')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do farmacêutico não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Nome do farmacêutico tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('supervisor')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do farmacêutico supervisor não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage(
            'Nome do farmacêutico supervisor tem de ter no mínimo 3 caracteres!'
        )
        .bail(),
    check('preparacao')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Preparação não pode ser nulo!')
        .bail()
        .isLength({ min: 10 })
        .withMessage('Preparação tem de ter no mínimo 10 caracteres!')
        .bail(),
    check('conservacao')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Conservação não pode ser nulo!')
        .bail()
        .isLength({ min: 10 })
        .withMessage('Conservação tem de ter no mínimo 10 caracteres!')
        .bail(),
    check('validade')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Validade não pode ser nulo!')
        .bail()
        .isLength({ min: 8 })
        .withMessage('Validade tem de ter no mínimo 8 caracteres!')
        .bail(),
    check('fFarmNome')
        .trim()

        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome da forma farmacêutica não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage(
            'Nome da forma farmacêutica tem de ter no mínimo 3 caracteres!'
        )
        .bail(),
    check('fFarmPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço da forma farmacêutica tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço da forma farmacêutica não pode ser nulo!')
        .bail(),
    check('fFarmQtd')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Quantidade da forma farmacêutica tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Quantidade da forma farmacêutica não pode ser nulo!')
        .bail(),
    check('materiasPrimas')
        .isArray()
        .not()
        .isEmpty()
        .withMessage('Matérias primas do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 1 })
        .withMessage('Tem de ter pelo menos 1 matéria prima!')
        .bail(),
    check('materiasPrimasPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço das matérias primas tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço das matérias primas não pode ser nulo!')
        .bail(),
    check('materiaisEmbalagem')
        .isArray()
        .not()
        .isEmpty()
        .withMessage('Materiais de embalagem do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 1 })
        .withMessage('Tem de ter pelo menos 1 material de embalagem!')
        .bail(),
    check('materiaisEmbalagemPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço dos materiais de embalagem tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço dos materiais de embalagem não pode ser nulo!')
        .bail(),
    check('validacoes')
        .isArray()
        .not()
        .isEmpty()
        .withMessage('Validações do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 1 })
        .withMessage('Tem de ter pelo menos 1 validação!')
        .bail(),
    check('IVA')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('IVA tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('IVA não pode ser nulo!')
        .bail(),
    check('totalPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço total tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço total não pode ser nulo!')
        .bail()
];

exports.validateOrcamento = [
    check('nomeManipulado')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Nome do manipulado tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('fatorF')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Fator tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Fator F não pode ser nulo!')
        .bail(),
    check('fFarmNome')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Nome da forma farmacêutica não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage(
            'Nome da forma farmacêutica tem de ter no mínimo 3 caracteres!'
        )
        .bail(),
    check('fFarmPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço da forma farmacêutica tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço da forma farmacêutica não pode ser nulo!')
        .bail(),
    check('fFarmQtd')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Quantidade da forma farmacêutica tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Quantidade da forma farmacêutica não pode ser nulo!')
        .bail(),
    check('materiasPrimas')
        .isArray()
        .not()
        .isEmpty()
        .withMessage('Matérias primas do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 1 })
        .withMessage('Tem de ter pelo menos 1 matéria prima!')
        .bail(),
    check('materiasPrimasPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço das matérias primas tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço das matérias primas não pode ser nulo!')
        .bail(),
    check('materiaisEmbalagem')
        .isArray()
        .not()
        .isEmpty()
        .withMessage('Materiais de embalagem do manipulado não pode ser nulo!')
        .bail()
        .isLength({ min: 1 })
        .withMessage('Tem de ter pelo menos 1 material de embalagem!')
        .bail(),
    check('materiaisEmbalagemPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço dos materiais de embalagem tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço dos materiais de embalagem não pode ser nulo!')
        .bail(),
    check('IVA')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('IVA tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('IVA não pode ser nulo!')
        .bail(),
    check('totalPrice')
        .trim()
        .escape()
        .isNumeric()
        .withMessage('Preço total tem de ser um número!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Preço total não pode ser nulo!')
        .bail()
];

exports.validateLogin = [
    check('email')
        .trim()
        .escape()
        .isEmail()
        .withMessage('Email inválido!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Email não pode ser nulo!')
        .bail(),
    // Password
    // min 8 char long.
    // At least one uppercase.
    // At least one lower case.
    // At least one special character.
    check('password')
        .not()
        .isEmpty()
        .withMessage('Password não pode ser nula!')
        .isLength({ min: 8 })
        .withMessage('Password tem de ter no mínimo 8 caracteres!')
        .isLength({ max: 15 })
        .withMessage('Password tem de ter no máximo 15 caracteres!')
        .matches(
            /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}$/,
            'i'
        )
        .withMessage(
            'Password tem de ter no mínimo 1 caracter especial e 1 número!'
        )
];

exports.validateSignup = [
    check('email')
        .trim()
        .escape()
        .isEmail()
        .withMessage('Email inválido!')
        .bail()
        .not()
        .isEmpty()
        .withMessage('Email não pode ser nulo!')
        .bail(),
    check('primeiroNome')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Primeiro nome não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Primeiro nome tem de ter no mínimo 3 caracteres!')
        .bail(),
    check('apelido')
        .trim()
        .escape()
        .not()
        .isEmpty()
        .withMessage('Apelido não pode ser nulo!')
        .bail()
        .isLength({ min: 3 })
        .withMessage('Apelido tem de ter no mínimo 3 caracteres!')
        .bail(),
    // Password
    // min 8 char long.
    // At least one uppercase.
    // At least one lower case.
    // At least one special character.
    check('password')
        .not()
        .isEmpty()
        .withMessage('Password não pode ser nula!')
        .isLength({ min: 8 })
        .withMessage('Password tem de ter no mínimo 8 caracteres!')
        .isLength({ max: 15 })
        .withMessage('Password tem de ter no máximo 15 caracteres!')
        .matches(
            /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\s).{8,15}$/,
            'i'
        )
        .withMessage(
            'Password tem de ter no mínimo 1 caracter especial e 1 número!'
        )
];
